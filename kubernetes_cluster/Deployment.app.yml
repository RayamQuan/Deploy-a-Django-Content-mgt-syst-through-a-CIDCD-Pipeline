# To link a django docker container to a postgres service kubernetes, you need to follow these steps:

# Create a django docker image1 or use an existing one from the public registry.
# Create a django deployment that uses the image and sets the environment variables for connecting to postgres1.
# Create a django service that exposes the django port and allows external access1.


# In your django settings.py file, you can use DATABASE_HOST, DATABASE_NAME, DATABASE_USER and DATABASE_PASSWORD as the database parameters for connecting to postgres. For example:

# import os

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.environ.get('DATABASE_NAME'),
#         'USER': os.environ.get('DATABASE_USER'),
#         'PASSWORD': os.environ.get('DATABASE_PASSWORD'),
#         'HOST': os.environ.get('DATABASE_HOST'),
#     }
# }


apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app-deployment
spec:
  replicas: 1s # number of pods to run at any given time 
  selector:
    matchLabels:
      app: django-app # label used to identify pod 
      tier: frontend # label used to identify pod 
      track: stable # label used to identify pod 
  template:
    metadata:
      labels:
        app: django-app # label used to identify pod 
        tier: frontend # label used to identify pod 
        track: stable # label used to identify pod 
    spec:
      containers:
        - name : django-app-container # container name 
          image : maiempire/django_project-app # docker image of your django app 
          ports :
            - containerPort : 8000 # port exposed by your django app 
          env :
            - name : DATABASE_HOST # environment variable for database host 
              value : postgres # value of database host (same as service name)  
              
            - name : DATABASE_USER # environment variable for database user  
              valueFrom :
                secretKeyRef :
                  name : postgres-config # secret containing database credentials  
                  key : POSTGRES_USER  

            - name : DATABASE_PASSWORD # environment variable for database password  
              valueFrom :
                secretKeyRef :
                  name : postgres-config # secret containing database credentials  
                  key : POSTGRES_PASSWORD 
            
            - name : DATABASE_DB # environment variable for database password  
              valueFrom :
                secretKeyRef :
                  name : postgres-config # secret containing database credentials  
                  key : POSTGRES_DB 